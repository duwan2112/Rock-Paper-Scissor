{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Dise\\xF1a tu hogar con react\\\\src\\\\component\\\\Table.js\";\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Token from \"./Token\";\nimport { WhiteButton } from \"./Button\";\nimport { ScoreContext } from '../App';\nconst TableStyled = styled.div`\n  display: grid;\n  grid-template-columns: 130px 130px;\n  justify-content: center;\n  justify-items: center;\n  grid-gap: 30px 50px;\n  margin: 2em 0;\n  position: relative;\n  & div:nth-of-type(3) {\n    grid-column: span 2;\n  }\n  .in-game {\n    text-transform: uppercase;\n    text-align: center;\n    font-size: 0.8em;\n    font-weight: 700;\n    letter-spacing: 1px;\n  }\n  .results{\n     text-align: center;\n     h2{\n       \n        text-transform: uppercase;\n       font-size: 56px;\n       margin: 0px;\n     }\n   \n  }\n  .line {\n    display: ${({\n  player\n}) => !player ? \"block\" : \"none\"};\n    height: 14px;\n    background: rgba(0, 0, 0, 0.2);\n    position: absolute;\n    width: 200px;\n    top: 60px;\n    &:before {\n      content: \"\";\n      height: 14px;\n      background: rgba(0, 0, 0, 0.2);\n      position: absolute;\n      left: 0px;\n      right: 0px;\n      top: 0px;\n      transform: rotate(60deg);\n      transform-origin: left top;\n    }\n    &:after {\n      content: \"\";\n      height: 14px;\n      background: rgba(0, 0, 0, 0.2);\n      position: absolute;\n      left: 0px;\n      right: 0px;\n      top: 0px;\n      transform: rotate(-60deg);\n      transform-origin: right top;\n    }\n  }\n  @media screen and  (min-width: 1024px)\n  {\n\n    /*grid-gap: 30px 140px;*/\n    grid-template-columns: 200px 200px;\n    ${({\n  playing\n}) => playing && 'grid-template-columns: 200px 200px 200px 200px;'}\n    \n    .line{\n      width: 250px;\n    }\n    .in-game{\n      font-size: 1em;\n      display: flex;\n      flex-direction: column;\n      > div {\n           order: 2;\n      }\n      > p {\n          order: 1;\n          margin-bottom: 2em;\n      }\n\n    }\n  }\n`;\nconst elements = [\"paper\", \"scissors\", \"rock\"];\nexport default function Table() {\n  const [results, setResult] = useState('');\n  const [housePick, sethousePick] = useState('default');\n  const [player, setUserActive] = useState(false);\n  const [pick, setPick] = useState(\"\");\n  const [iWon, setIwon] = useState(false);\n\n  function getRandomInit(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  function youWin(name, house) {\n    if (house === name) {\n      return 'draw';\n    } else if (name === 'paper') {\n      if (house === 'scissors') {\n        return 'lose';\n      }\n\n      if (house === 'rock') {\n        return 'win';\n      }\n    } else if (name === 'scissors') {\n      if (house === 'paper') {\n        return 'win';\n      }\n\n      if (house === 'rock') {\n        return 'lose';\n      }\n    } else if (name === 'rock') {\n      if (house === 'paper') {\n        return 'lose';\n      }\n\n      if (house === 'scissors') {\n        return 'win';\n      }\n    }\n  }\n\n  function launchhousePick() {\n    return new Promise((resolve, reject) => {\n      let pick;\n      const interval = setInterval(() => {\n        pick = elements[getRandomInit(0, 3)];\n        sethousePick(pick);\n      }, 200);\n      setTimeout(() => {\n        clearInterval(interval);\n        resolve(pick);\n      }, 2000);\n    });\n  }\n\n  const {\n    score,\n    setScore\n  } = useContext(ScoreContext);\n\n  async function onClick(name) {\n    setUserActive(true);\n    setPick(name);\n    const house = await launchhousePick();\n    const result = youWin(name, house);\n    setResult(result);\n\n    if (result === 'win') {\n      setScore(score + 1);\n    } else if (result === 'lose') {\n      setScore(0);\n    }\n  }\n\n  function handleTryAgainClick() {\n    setUserActive(false);\n    setResult('');\n  }\n\n  return /*#__PURE__*/React.createElement(TableStyled, {\n    player: player,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }), !player ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Token, {\n    name: \"paper\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Token, {\n    name: \"scissors\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Token, {\n    name: \"rock\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"in-game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Token, {\n    name: pick,\n    isShadowAnimated: results === 'win',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \" You Picked\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"in-game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Token, {\n    name: housePick,\n    isShadowAnimated: results === 'lose',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \" The House Picked\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, results && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 18\n    }\n  }, \" YOU \", results), /*#__PURE__*/React.createElement(WhiteButton, {\n    onClick: handleTryAgainClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 18\n    }\n  }, \" TRY AGAIN \")))));\n}","map":{"version":3,"sources":["D:/Desktop/Dise√±a tu hogar con react/src/component/Table.js"],"names":["React","useState","useContext","styled","Token","WhiteButton","ScoreContext","TableStyled","div","player","playing","elements","Table","results","setResult","housePick","sethousePick","setUserActive","pick","setPick","iWon","setIwon","getRandomInit","min","max","Math","floor","random","youWin","name","house","launchhousePick","Promise","resolve","reject","interval","setInterval","setTimeout","clearInterval","score","setScore","onClick","result","handleTryAgainClick"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Token from \"./Token\";\r\nimport {WhiteButton} from \"./Button\";\r\nimport {ScoreContext} from '../App';\r\nconst TableStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 130px 130px;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  grid-gap: 30px 50px;\r\n  margin: 2em 0;\r\n  position: relative;\r\n  & div:nth-of-type(3) {\r\n    grid-column: span 2;\r\n  }\r\n  .in-game {\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    font-size: 0.8em;\r\n    font-weight: 700;\r\n    letter-spacing: 1px;\r\n  }\r\n  .results{\r\n     text-align: center;\r\n     h2{\r\n       \r\n        text-transform: uppercase;\r\n       font-size: 56px;\r\n       margin: 0px;\r\n     }\r\n   \r\n  }\r\n  .line {\r\n    display: ${({ player }) => (!player ? \"block\" : \"none\")};\r\n    height: 14px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    position: absolute;\r\n    width: 200px;\r\n    top: 60px;\r\n    &:before {\r\n      content: \"\";\r\n      height: 14px;\r\n      background: rgba(0, 0, 0, 0.2);\r\n      position: absolute;\r\n      left: 0px;\r\n      right: 0px;\r\n      top: 0px;\r\n      transform: rotate(60deg);\r\n      transform-origin: left top;\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      height: 14px;\r\n      background: rgba(0, 0, 0, 0.2);\r\n      position: absolute;\r\n      left: 0px;\r\n      right: 0px;\r\n      top: 0px;\r\n      transform: rotate(-60deg);\r\n      transform-origin: right top;\r\n    }\r\n  }\r\n  @media screen and  (min-width: 1024px)\r\n  {\r\n\r\n    /*grid-gap: 30px 140px;*/\r\n    grid-template-columns: 200px 200px;\r\n    ${({playing}) => playing && 'grid-template-columns: 200px 200px 200px 200px;'}\r\n    \r\n    .line{\r\n      width: 250px;\r\n    }\r\n    .in-game{\r\n      font-size: 1em;\r\n      display: flex;\r\n      flex-direction: column;\r\n      > div {\r\n           order: 2;\r\n      }\r\n      > p {\r\n          order: 1;\r\n          margin-bottom: 2em;\r\n      }\r\n\r\n    }\r\n  }\r\n`;\r\n\r\nconst elements = [\"paper\", \"scissors\", \"rock\"];\r\n\r\nexport default function Table() {\r\n  const [results, setResult] = useState('');\r\n  const [housePick, sethousePick] = useState('default');\r\n  const [player, setUserActive] = useState(false);\r\n  const [pick, setPick] = useState(\"\");\r\n  const [iWon, setIwon] = useState(false);\r\n\r\n  function getRandomInit(min, max) {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n  \r\n  function youWin(name, house){\r\n    \r\n\r\n    if(house=== name){\r\n      return 'draw'\r\n     }\r\n\r\n    else if(name === 'paper')\r\n    {\r\n\r\n       if(house === 'scissors')\r\n       {\r\n           return 'lose'\r\n       }\r\n       if(house === 'rock')\r\n       {\r\n           return 'win'\r\n       }\r\n    }\r\n    else if(name === 'scissors')\r\n    {\r\n       if(house === 'paper')\r\n       {\r\n        return 'win'\r\n       }\r\n       if(house === 'rock')\r\n       {\r\n        return 'lose'\r\n       }\r\n    }\r\n    else if(name === 'rock')\r\n    {\r\n       if(house === 'paper')\r\n       {\r\n        return 'lose'\r\n       }\r\n       if(house === 'scissors')\r\n       {\r\n        return 'win'\r\n       }\r\n    }\r\n  \r\n  }\r\n  \r\n  function launchhousePick(){\r\n    return new Promise((resolve, reject)=>{ \r\n      \r\n      let pick\r\n      const interval = setInterval(()=>{ \r\n        pick=elements[getRandomInit(0, 3)];\r\n          sethousePick(pick)\r\n        },200) \r\n      setTimeout(()=>{\r\n        clearInterval(interval);\r\n          resolve(pick)\r\n        },2000)})\r\n    \r\n      \r\n  }\r\n  const {score,setScore} = useContext(ScoreContext);\r\n\r\n  async function  onClick(name) {\r\n    setUserActive(true);\r\n    setPick(name);\r\n    const house= await launchhousePick();\r\n    const result = youWin(name, house);\r\n    setResult(result);\r\n     if(result==='win'){\r\n       setScore(score+1);\r\n       \r\n     }\r\n     else if(result==='lose')\r\n     {\r\n       setScore(0)\r\n     }\r\n\r\n  }\r\n\r\n  function handleTryAgainClick(){\r\n      setUserActive(false);\r\n      setResult('');\r\n  }\r\n  return (\r\n    <TableStyled player={player}>\r\n      <span className=\"line\"></span>\r\n      {!player ? (\r\n        <React.Fragment>\r\n          <Token name=\"paper\" onClick={onClick} />\r\n          <Token name=\"scissors\" onClick={onClick} />\r\n          <Token name=\"rock\" onClick={onClick} />\r\n        </React.Fragment>\r\n      ) : (\r\n        <>\r\n          <div className=\"in-game\">\r\n            <Token name={pick} isShadowAnimated={(results==='win')} />\r\n            <p> You Picked</p>\r\n          </div>\r\n          <div className=\"in-game\">\r\n            <Token name={housePick} isShadowAnimated={(results==='lose')}/>\r\n            <p> The House Picked</p>\r\n          </div>\r\n          <div className=\"results\">\r\n            {\r\n              results && (\r\n                <>\r\n                 <h2> YOU {results}</h2>\r\n                 <WhiteButton  onClick={handleTryAgainClick}> TRY AGAIN </WhiteButton> \r\n                </>\r\n                )\r\n\r\n            }\r\n           \r\n           \r\n          </div>\r\n        </>\r\n      )}\r\n    </TableStyled>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}